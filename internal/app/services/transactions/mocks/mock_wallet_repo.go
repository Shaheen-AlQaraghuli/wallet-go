// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"
	models "github.com/Shaheen-AlQaraghuli/wallet-go/internal/app/models"

	mock "github.com/stretchr/testify/mock"
)

// MockWalletRepo is an autogenerated mock type for the walletRepo type
type MockWalletRepo struct {
	mock.Mock
}

// GetByID provides a mock function with given fields: ctx, id
func (_m *MockWalletRepo) GetByID(ctx context.Context, id string) (models.Wallet, error) {
	ret := _m.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for GetByID")
	}

	var r0 models.Wallet
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (models.Wallet, error)); ok {
		return rf(ctx, id)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) models.Wallet); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(models.Wallet)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockWalletRepo creates a new instance of MockWalletRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockWalletRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockWalletRepo {
	mock := &MockWalletRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
